name: Deploy to AWS
on:
  push:
    branches:
      - 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    env:
      GH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Node.js Setup
        uses: actions/setup-node@v2.5.1
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com
          always-auth: true
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
          token: ${{ secrets.NPM_TOKEN }}
      - name: Install Yarn
        run: npm install -g yarn
      - uses: actions/cache@v2
        id: yarn-cache
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build
        run: yarn build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.NPM_TOKEN }}
          REACT_APP_AUTH_AUDIENCE: ${{ secrets.PROD_REACT_APP_AUTH_AUDIENCE }}
          REACT_APP_AUTH_CLIENT_ID: ${{ secrets.PROD_REACT_APP_AUTH_CLIENT_ID }}
          REACT_APP_AUTH_BASE_URL: ${{ secrets.PROD_REACT_APP_AUTH_BASE_URL }}
          REACT_APP_SENTRY_ENDPOINT: ${{ secrets.PROD_REACT_APP_SENTRY_ENDPOINT }}
          REACT_APP_GOOGLE_ANALYTICS: ${{ secrets.PROD_REACT_APP_GOOGLE_ANALYTICS }}
          REACT_APP_GOOGLE_ANALYTICS_ENABLED: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy app build to S3 bucket
        run: aws s3 sync ./build/ s3://quaer-dev-web-hosting --delete
      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id=E3K5BVB4PVROC9  --paths="/*"


